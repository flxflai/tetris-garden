{"ast":null,"code":"var _jsxFileName = \"/Users/user/Documents/GitHub/tetris-garden/my-app/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useRef } from 'react';\nimport { Canvas, useFrame } from '@react-three/fiber';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Box(props) {\n  _s();\n  // This reference gives us direct access to the THREE.Mesh object\n  const ref = useRef();\n  // Subscribe this component to the render-loop, rotate the mesh every frame\n  useFrame((state, delta) => ref.current.rotation.x += 0.01);\n  useFrame((state, delta) => ref.current.rotation.y -= 0.01);\n  useFrame((state, delta) => ref.current.rotation.z += 0.01); // Return the view, these are regular Threejs elements expressed in JSX\n  return /*#__PURE__*/_jsxDEV(\"mesh\", {\n    ...props,\n    ref: ref,\n    children: [/*#__PURE__*/_jsxDEV(\"boxGeometry\", {\n      args: [1, 1, 1]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"meshStandardMaterial\", {\n      color: \"blue\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 5\n  }, this);\n}\n_s(Box, \"aVxcCejJRm6Lcgs4XOwoYLbF1L4=\", false, function () {\n  return [useFrame, useFrame, useFrame];\n});\n_c = Box;\nexport default function App() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      width: \"100vw\",\n      height: \"100vh\",\n      display: \"flex\",\n      justifyContent: \"center\",\n      alignItems: \"center\"\n    },\n    children: /*#__PURE__*/_jsxDEV(Canvas, {\n      children: [/*#__PURE__*/_jsxDEV(\"ambientLight\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"pointLight\", {\n        position: [10, 10, 10]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n}\n_c2 = App;\nvar _c, _c2;\n$RefreshReg$(_c, \"Box\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"names":["React","useRef","Canvas","useFrame","Box","props","ref","state","delta","current","rotation","x","y","z","App","width","height","display","justifyContent","alignItems"],"sources":["/Users/user/Documents/GitHub/tetris-garden/my-app/src/App.js"],"sourcesContent":["import React, { useRef } from 'react'\nimport { Canvas, useFrame } from '@react-three/fiber'\n\nfunction Box(props) {\n  // This reference gives us direct access to the THREE.Mesh object\n  const ref = useRef()\n  // Subscribe this component to the render-loop, rotate the mesh every frame\n  useFrame((state, delta) => (ref.current.rotation.x += 0.01))\n  useFrame((state, delta) => (ref.current.rotation.y -= 0.01))\n  useFrame((state, delta) => (ref.current.rotation.z += 0.01))  // Return the view, these are regular Threejs elements expressed in JSX\n  return (\n    <mesh\n      {...props}\n      ref={ref}>\n      <boxGeometry args={[1, 1, 1]} />\n      <meshStandardMaterial color=\"blue\" />\n    </mesh>\n  )\n}\n\nexport default function App() {\n  return (\n    <div style={{ width: \"100vw\", height: \"100vh\", display: \"flex\", justifyContent: \"center\", alignItems: \"center\" }}>\n      <Canvas>\n        <ambientLight />\n        <pointLight position={[10, 10, 10]} />\n        <Box />\n      </Canvas>\n    </div>\n  )\n}\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,MAAM,QAAQ,OAAO;AACrC,SAASC,MAAM,EAAEC,QAAQ,QAAQ,oBAAoB;AAAA;AAErD,SAASC,GAAG,CAACC,KAAK,EAAE;EAAA;EAClB;EACA,MAAMC,GAAG,GAAGL,MAAM,EAAE;EACpB;EACAE,QAAQ,CAAC,CAACI,KAAK,EAAEC,KAAK,KAAMF,GAAG,CAACG,OAAO,CAACC,QAAQ,CAACC,CAAC,IAAI,IAAK,CAAC;EAC5DR,QAAQ,CAAC,CAACI,KAAK,EAAEC,KAAK,KAAMF,GAAG,CAACG,OAAO,CAACC,QAAQ,CAACE,CAAC,IAAI,IAAK,CAAC;EAC5DT,QAAQ,CAAC,CAACI,KAAK,EAAEC,KAAK,KAAMF,GAAG,CAACG,OAAO,CAACC,QAAQ,CAACG,CAAC,IAAI,IAAK,CAAC,EAAE;EAC9D,oBACE;IAAA,GACMR,KAAK;IACT,GAAG,EAAEC,GAAI;IAAA,wBACT;MAAa,IAAI,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC;IAAE;MAAA;MAAA;MAAA;IAAA,QAAG,eAChC;MAAsB,KAAK,EAAC;IAAM;MAAA;MAAA;MAAA;IAAA,QAAG;EAAA;IAAA;IAAA;IAAA;EAAA,QAChC;AAEX;AAAC,GAfQF,GAAG;EAAA,QAIVD,QAAQ,EACRA,QAAQ,EACRA,QAAQ;AAAA;AAAA,KANDC,GAAG;AAiBZ,eAAe,SAASU,GAAG,GAAG;EAC5B,oBACE;IAAK,KAAK,EAAE;MAAEC,KAAK,EAAE,OAAO;MAAEC,MAAM,EAAE,OAAO;MAAEC,OAAO,EAAE,MAAM;MAAEC,cAAc,EAAE,QAAQ;MAAEC,UAAU,EAAE;IAAS,CAAE;IAAA,uBAC/G,QAAC,MAAM;MAAA,wBACL;QAAA;QAAA;QAAA;MAAA,QAAgB,eAChB;QAAY,QAAQ,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE;MAAE;QAAA;QAAA;QAAA;MAAA,QAAG,eACtC,QAAC,GAAG;QAAA;QAAA;QAAA;MAAA,QAAG;IAAA;MAAA;MAAA;MAAA;IAAA;EACA;IAAA;IAAA;IAAA;EAAA,QACL;AAEV;AAAC,MAVuBL,GAAG;AAAA;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}